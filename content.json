{"meta":{"title":"ViscSecKnow","subtitle":"","description":"","author":"Freizy","url":"http://viscSec.github.io","root":"/"},"pages":[{"title":"About","date":"2025-10-03T12:40:34.045Z","updated":"2025-10-03T10:28:43.239Z","comments":true,"path":"about/index.html","permalink":"http://viscsec.github.io/about/index.html","excerpt":"","text":""},{"title":"Tags","date":"2025-10-03T12:40:07.221Z","updated":"2025-10-03T10:28:43.257Z","comments":true,"path":"tags/index.html","permalink":"http://viscsec.github.io/tags/index.html","excerpt":"","text":""},{"title":"Categories","date":"2025-10-03T14:24:42.218Z","updated":"2025-10-03T14:24:42.218Z","comments":true,"path":"categories/index.html","permalink":"http://viscsec.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"信息收集","slug":"信息收集","date":"2025-11-01T08:14:44.000Z","updated":"2025-11-01T09:49:15.227Z","comments":true,"path":"2025/11/01/信息收集/","permalink":"http://viscsec.github.io/2025/11/01/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/","excerpt":"","text":"前言 ​ 信息收集：一种对目标信息、资产进行收集的行为，当进行渗透攻击时，我们依赖于信息收集的结果，来进行对应的合法攻击。 ​ 信息收集所得到的信息越多，则对应的攻击面就越广，按照控制变量来讲，攻击面越广，那么得到的漏洞的概率也就越大。所以要尽可能的有针对性地进行收集。 ​ 那么收集那些内容呢？ 公司相关：公司信息、股权穿透(找到其他控股公司扩大攻击面、找到边缘资产)、ICP备案、注册域名、对外发布产品(APP、小程序)、法人电话、邮箱等。 域名相关：主域名，子域名，备案域名，注册域名，证书crt反查域名，whois反查域名、CDN绕过。 子域名：工具(字典爆破)、查询dns记录收集子域，威胁情报收录子域名，爬虫爬取，js文件分析path发现，搜索引擎查找site:xxx.xxx。 单域名：接口（findsomething插件，js文件找），端口，C段，架构信息(中间件、编写语言、数据库、CMS)指纹识别(找源码，0day或代码审计)，信息泄露(git，svn，备份文件zip、rar，DS_store、composer.json)，敏感信息，目录、文件，模糊Fuzz收集 下面待补充！！ APP 小程序 收集细节 CDN绕过：通过站长工具多地ping判定是否会有CDN，类似的网站有很多(get-site-ip、user.ipip.net)，可以多试试，工具直接识别、遗留文件识别phpinfo、 工具爆破子域名：目标网站发现工具特征后，可能会遇到waf，这个时候需要绕过waf，直接放弃，下一个吧，如果waf那么好绕过，就不叫waf了。 js分析path：由于一些网站的子域名，字典中根本就没有收集，所以是扫不到的，分析js文件就有几率找到这个子域名，如果遇到一个可以访问的后台等页面，那就是未授权访问漏洞。 js发现接口：手动找(src=``path=``method:\"get\"``http.get(``method:\"post\"``http.post(``$ajax http://service.httppost http://service.httpget)，半自动(burp抓包用插件找)，自动（JSFinder、URLFinder、JSINFO-SCAN、ffuf模糊爆破需要字典、packer-fuzzer (webpack打包器测试) ），字典下载网站Assetnote 单词列表 架构信息：通过wapplayzer插件发现中间件、编程语言 主机架构：web服务器-通过请求网页包识别，应用服务器-通过端口扫描识别 waf识别：identwaf，wafw00f，图片识别 蜜罐识别：Heimdallr，quake，鹰图，fofa 人工蜜罐识别：有规律的端口开放、web访问非http协议就下载html文件(蜜罐使用http协议来解析其他协议)、设备指纹识别，网络空间识别(未知蜜罐) 工具列表 以baidu.com为例 目标站点与子域名 目标站点 被动收集-监听和记录 企业查：爱企查、小蓝本、00信安、风鸟、ENscan 备案号、注册域名、关联公司 DNS查询：nslookup、dnsdumpster、viewdns.info、ip138 whois：whois baidu.com js爬取：Findsomething、Wappalyzer 引擎：fofa、shodan、鹰图、quake 证书查询：crt IP反查：站长 C段、旁站：webscan、nmap cdn绕过：多地ping、纯真IP库geo-public+fuckcdn进行组合cdn扫描、get-site-ip、user.ipip.net 指纹识别：云悉、TideFinger、whatweb、 主动收集-扫描和攻击 信息泄露：GitHack、SVNHack、dvcs-ripper、 js文件：JSfinder、webpack、URLFinder、ffuf 目录、文件：御剑、dirsearch、dirmap 子域名扫描：oneforall、subdomian waf识别：identwaf、wafw00f 蜜罐识别：Heimdallr、quake、鹰图、fofa 指纹识别：ehole、httpx、P1finger、TideFinger、webFinder、云悉、潮汐 端口扫描：zenmap、nmap、masscan api接口：findsomething、AntiDebug Breaker 中间件扫描：gotoscan、wapplayzer 网盘资源搜索：www.lingfengyun.com 漏洞扫描：Goby、dddd、pppscan、AWVS 全能扫描：Fscan、Rscan、Tscan、webfinder 综合信息收集：雪影、fuff模糊 综合扫描器：北极熊、Yakit、Goby、xray 威胁情报：微步、奇安信、360 抓包工具：fidder、charles、BP、proxifier、wireshark、科来","categories":[],"tags":[]},{"title":"计算机系统","slug":"计算机基础/计算机系统","date":"2025-10-03T13:51:16.000Z","updated":"2025-10-03T14:16:13.292Z","comments":true,"path":"2025/10/03/计算机基础/计算机系统/","permalink":"http://viscsec.github.io/2025/10/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/","excerpt":"","text":"计算机系统 概念讲解 计算机系统从宏观角度来对计算机整个架构进行讲解。 参考资料","categories":[{"name":"-计算机基础","slug":"计算机基础","permalink":"http://viscsec.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"计算机网络","slug":"计算机基础/计算机网络","date":"2025-10-03T13:49:36.000Z","updated":"2025-10-03T14:32:51.909Z","comments":true,"path":"2025/10/03/计算机基础/计算机网络/","permalink":"http://viscsec.github.io/2025/10/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","excerpt":"","text":"计算机网络 概念讲解 计算机网络有很多协议和网络概念。 参考资料","categories":[{"name":"-计算机基础","slug":"计算机基础","permalink":"http://viscsec.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"渗透测试","slug":"渗透测试基础/渗透测试","date":"2025-10-03T13:47:20.000Z","updated":"2025-10-03T14:00:10.859Z","comments":true,"path":"2025/10/03/渗透测试基础/渗透测试/","permalink":"http://viscsec.github.io/2025/10/03/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/","excerpt":"","text":"渗透测试 概念讲解 渗透测试涵盖了白盒测试、黑盒测试和灰盒测试。","categories":[{"name":"渗透测试基础","slug":"渗透测试基础","permalink":"http://viscsec.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"}],"tags":[]},{"title":"如何使用这本书","slug":"如何使用这本书","date":"2025-10-01T16:00:00.000Z","updated":"2025-10-04T10:43:05.394Z","comments":true,"path":"2025/10/02/如何使用这本书/","permalink":"http://viscsec.github.io/2025/10/02/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%BF%99%E6%9C%AC%E4%B9%A6/","excerpt":"","text":"​ 如果你是刚入团队的大一新生，在大一，我们推荐你去打一些CTF比赛，学一些计算机基础的知识，为渗透测试做好基础准备。当然，也可以直接进入渗透团队，做渗透全流程。但是后者需要基础，至少拥有自学能力。 ​ 在团队内部分为三个部分：渗透、开发和安维。也许是渗透方向太过热情，使得我们开发和安维的同学较少，所以我主要说明一下开发和安维对于学渗透的好处。 ​ 开发，顾名思义，一个东西从无到有，整体如何设计的，代码如何创造的，功能如何实现的，最终成果要如何测试。从开发层出发，会更好理解整个系统(指代web开发，软件开发，系统开发等方向)，从而会更加理解运行原理，以此来更加透彻地完成渗透目标。而开发的职责呢，如果你本来就是要学开发的，可以为红队编写渗透工具，比如：自动化信息收集、自动化漏洞发现、自动化漏洞利用。。。 ​ 安维，简单理解为安全维护，对基础设施搭建并进行维护。进行靶场搭建，服务器搭建，网站搭建等，通过这些就可以明白，整个环境、网站架构如何运行，服务器如何提供服务，靶场怎么做等等。与开发实际作用类似，只不过在维护的过程中会发现很多潜在问题，从侧面反映出维护的这个环境安不安全，哪里不安全，哪里会受到攻击。 ​ 开发和安维的学习路径较为单一，相对渗透要学的东西较少，但是程度更深，也就是说更加有深度，不再浮于表面，而是深刻理解这个机制的运作原理。 ​ 而渗透呢，要学的东西实际不少，从计算机四大件-开发语言-漏洞原理-漏洞利用-内网渗透-攻击流程-攻击链等等，虽然东西很多，但只要有兴趣、有耐心，认真做了包有好果子吃的hhh。未来最近的项目就是hw，所以如果能赶上机会，一年到头，收获还是颇丰的。 那么开始整个学习流程吧！ 每个人的学习情况可能都不一样，所以以下建议仅供参考！ ​ 大部分人都不知道从哪里开始学，建议先从CTF入手，了解了基本知识，做好了CTF题，之后转渗透也会更加顺畅。web题是最常见最好得分的，所以从web题入手即可。到后面如果有做pwn题的大佬，可以转向二进制安全，那更加考验耐心，挑战更多，当然，回报也是显而易见的。 ​ CTF的路径 参见【CTF2000页白皮书】，基础部分过完，优先选择web，如果之后你觉得web太简单且时间充裕（比如你两个月就学完了web并且在各种ctf题库里都十分顺手，那你就是web大手子），再转pwn，pwn更加接近底层，更加接近原理。 之后，就是打比赛，CTF比赛有很多，每个月的线上赛也不少，所以有很多锻炼和实践的机会。如果你觉得CTF比赛很好，很适合你，而且你不想转到任何方向，只想一心做CTF，那有更大的舞台等着你，世界级的CTF比赛DEFCON等等。。。 ​ 渗透测试的路径 CTF转渗透的同学，已经有一些基础了，接下来团队会给出每周课题，严格按照这个做，那进护网项目是没问题的。 直接做渗透的同学，需要从基础开始做起，当然也可以直接按照渗透流程走，但是这种难度比较大，因为需要边做边补，以至于最后什么也没学到，所以不建议0基础直接做渗透。 web开发-web安全-红队攻击流程-学到这一阶段一般就有自己的规划了 计算机组成 - 操作系统(linux基础命令) - 前端语言(HTML+CSS+JS) - JS(JS逆向有兴趣的可以看看) - MySQL - PHP - kali - 信息收集 - BP - 密码学 - OWASP TOP 10 - 漏扫工具 - 靶场实战 - hw实战 分享一个安研的学习历程： 我的安全之路：如何从安全小白成长为安全研究员 - FreeBuf网络安全行业门户","categories":[],"tags":[]},{"title":"前言","slug":"前言","date":"2025-09-30T16:00:00.000Z","updated":"2025-10-04T03:34:41.423Z","comments":true,"path":"2025/10/01/前言/","permalink":"http://viscsec.github.io/2025/10/01/%E5%89%8D%E8%A8%80/","excerpt":"","text":"本Knowledge服务于Visc Team，由Freizy维护，任何有疑惑的地方以及想要修改的文档在群里找到我！ 为何要搭建此知识库？ 首先，对于团队可持续发展以及个人的连续性学习都有很大帮助，尤其是进入团队的新人，我们有必要也有责任为他们的学习做好准备。 其次，有此知识库，便可以统览整个CS+Sec的大局，避免出现学习迷茫，不知下一步如何做的问题。 然后，有了对整个知识体系的了解后，清楚地认识哪里需要补充，哪里需要完善，这对于知识基础薄弱但是渗透知识较好的成员有很大帮助。 综上，本知识库应运而生，也参考了北大csdiy.wiki[CS自学指南]的整体架构，希望对团队成员以及从事安全领域的同学有所帮助。 为何要组建团队？ “在时代的风口，猪都会上树” 虽然这个比喻不太恰当，但是实际确实如此，我在此不再举例说明。 主要原因有如下几点： 第一点，属于我的一些想法和经历。 ​ 在高考结束后的暑假，我便有了组建一个安全团队的想法，那时候刚学习安全没多久，停留在基础阶段，然后大一学委竞选的时候便有过说明，但苦于没有志同道合的同学，离安全道路渐行渐远，之后大二想过考研，可是命运总是捉弄人，在大二的一个排球课，也就是2月26号，ACM协会中的yuesc询问有没有要做网安技术相关的同学，提供资料和培训。。。我想着如果确实可行，那也好比浑浑噩噩度日的好，于是3.8开始了第一次的谈话，随后我们想法大抵相同，我感叹于yuesc的认知水平令人折服，渗透技术高超，大学经历也相对传奇。所以开始组建团队。 第二点，属于时代的趋势。 ​ 在某大厂hw外包日益严重的情况下，我们曾幻想着打翻牛奶，不为未来而哭泣。团队必然是重中之重的一环，结合各种项目渠道，我们完全可以组建一支团队，没有了中介，其实薪资对于大学生是相当高的。毕业后可以直接留在团队发展，甚至直接开始一起创业。而这种学校内团队，性质与外面的完全不同，在校内，有新生力量，毕业后，有学长接纳，所以对于本校来讲，稳定的学习路线，稳定的就业，还算不错。当然这只是一种想象，我们最起码做到了组建团队这第一步。 第三点，契合企业要求的团队培养。 ​ 企业开发需要什么流程？参看devops[终于有人把DevOps讲明白了 - 知乎]，基于这种开发流程，介于对安全性的考量，又必然出现了devsecops的全流程，引入了安全性，参看https://developer.aliyun.com/article/1523992与https://security.tencent.com/index.php/blog/msg/191。故我们团队内部也要采用这个架构，来实现企业级别的工作方式，来更好契合企业要求，更快融入企业的文化和工作中。这一步暂时还未实现，未来希望可以做到。","categories":[],"tags":[]}],"categories":[{"name":"-计算机基础","slug":"计算机基础","permalink":"http://viscsec.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"},{"name":"渗透测试基础","slug":"渗透测试基础","permalink":"http://viscsec.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"}],"tags":[]}